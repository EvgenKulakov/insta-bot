import instaloader
from dtos import StoryDataInstaloader, ProfileDTO
import re
from typing import List
import os
from datetime import datetime, timedelta
from telebot.types import Message


def valid_username(username: str) -> bool:
    pattern = r'^[a-zA-Z0-9._]{1,30}$'
    return re.match(pattern, username)

def create_profile_text(profile: ProfileDTO, story: instaloader.Story | None = None) -> str:
    start_text = (f'{profile.username}\n\n'
                  f'<b>{profile.full_name}</b>\n'
                  f'–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {profile.followers} –∂–∞–ª\n'
                  f'–ü–æ–¥–ø–∏—Å–∫–∏: {profile.followees} –∂–∞–ª\n\n'
                  f'{profile.biography}\n\n\n'
                  f'<pre>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–Ω—Å—Ç–∞—à–µ—Ä—à–Ω—è:</pre>\n')
    if profile.is_private:
        return (f'{start_text}'
                f'<b>{profile.full_name}</b> - —ç—Ç–æ –∑–∞–∫—Ä—ã—Ç—ã–π –ø—Ä–æ—Ñ–∏–ª—å. –°—Ç–æ—Ä–∏—Å—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã')
    if not story:
        return (f'{start_text}'
                f'–£ <b>{profile.full_name}</b> –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–∏—Å.\n'
                f'–ü–æ–ø—Ä–æ–±—É–π –ø—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –ø–æ–∑–∂–µ')
    if story.itemcount == 1:
        return (f'{start_text}'
                f'–£ <b>{profile.full_name}</b> –µ—Å—Ç—å –æ–¥–Ω–∞ —Å—Ç–æ—Ä–∏—Å - '
                f'–≤—ã–ª–æ–∂–µ–Ω–Ω–∞—è –≤ {story.latest_media_local.strftime("%H:%M:%S")}.\n'
                f'–Ø –º–æ–≥—É –∞–Ω–æ–Ω–∏–º–Ω–æ –ø—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –∏ –ø–µ—Ä–µ—Å–ª–∞—Ç—å —ç—Ç—É —Å—Ç–æ—Ä–∏—Å —Ç–µ–±–µ.\n'
                f'–ü—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å {profile.full_name}?')
    if story.itemcount > 1:
        return (f'{start_text}'
                f'–£ <b>{profile.full_name}</b> –µ—Å—Ç—å {str(story.itemcount)} —Å—Ç–æ—Ä–∏—Å '
                f'(–ø–æ—Å–ª–µ–¥–Ω—è—è –≤ {story.latest_media_local.strftime("%H:%M:%S")}).\n'
                f'–Ø –º–æ–≥—É –∞–Ω–æ–Ω–∏–º–Ω–æ –ø—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –∏ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –≤—Å–µ —Å—Ç–æ—Ä–∏—Å —Ç–µ–±–µ.\n'
                f'–ü—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å {profile.full_name}?')


def create_text_insta_error(message: Message, loader_username: str, exception: Exception):
    return (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.first_name} –ø—ã—Ç–∞–ª—Å—è –ø–æ–∏–≥—Ä–∞—Ç—å, '
            f'–Ω–æ —É–ø–∞–ª –∞–∫–∫–∞—É–Ω—Ç {loader_username}\n'
            f'–õ–æ–≥ –æ—à–∏–ø–∫–∏:\n'
            f'{exception}')


def create_success_text(message: Message, loader_username: str):
    return (f'–£—Å–ø–µ—à–Ω–∞—è –∏–≥—Ä–∞ –≤ –∏–Ω—Å—Ç–∞-–±–æ—Ç–∞:\n'
            f'–ñ—É–∫: {message.chat.first_name}\n'
            f'–ò–Ω—Å—Ç–∞-–∞–∫–∫: {loader_username}')


def create_text_menu(mode: str) -> str:
    text_mode: str = ''
    if mode == 'query':
        text_mode = (f'<b>‚óè –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</b>'
                     f'\n‚óã –°—Ä–∞–∑—É –ø—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å'
                     f'\n‚óã –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π')
    if mode == 'analyzeNew':
        text_mode = (f'‚óã –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
                     f'\n<b>‚óè –°—Ä–∞–∑—É –ø—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å</b>'
                     f'\n‚óã –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π')
    if mode == 'remove':
        text_mode = (f'‚óã –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
                     f'\n‚óã –°—Ä–∞–∑—É –ø—Ä–æ—à–µ—Ä—Å—Ç–∏—Ç—å'
                     f'\n<b>‚óè –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π</b>')

    return (f'üèÉ‚Äç‚ôÄÔ∏è –¢—ã –≤ –º–µ–Ω—é –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π'
            f'\n\n–†–µ–∂–∏–º—ã:'
            f'\n{text_mode}')


def get_start_text():
    return (f'<b>–ü—Ä–∏–≤–µ—Ç, —è –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–Ω—ã–π —à–µ—Ä—à–µ–Ω—å</b>'
            f'\n\nüîç –í–≤–µ–¥–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Instagram, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å.'
            f'\n\nüîç üêù ‚ùå –ù–∞–∂–º–∏ /menu, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–∫–∞–ª–∏—Å—å —Ä–∞–Ω–µ–µ.'
            f'\n\nüßê –ö–Ω–æ–ø–∫–∞ /start —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –µ—ë –Ω–∞–∂–∏–º–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.')


def delete_stories_handler(story_data_array: List[StoryDataInstaloader], folder_stories: str):

    for story_data in story_data_array:
        os.truncate(story_data.path, 0)

    for file_name in os.listdir(folder_stories):
        date_story = datetime.strptime(file_name.split('_')[0], '%d-%m-%Y')
        if datetime.now() - date_story > timedelta(days=2):
            file_path = os.path.join(folder_stories, file_name)
            os.remove(file_path)


def get_avatar_path(folder_path: str):
    file_list = os.listdir(folder_path)
    file_name = file_list[-1]
    file_path = os.path.join(folder_path, file_name)
    return file_path
